---

- hosts: "all"
  become: true
  become_user: root
  tasks:
    - name: Upgrade all packages
      apt: cache_valid_time=3600 update_cache=yes
    - name: curl install
      package: name=curl state=latest
    - name: UFW enable
      ufw:
        state=enabled
    - name: Allow OpenSSH
      ufw:
       rule=allow
       name=OpenSSH
    - name: Allow 80
      ufw:
       rule: allow
       port: "80"
       proto: tcp
    - name: Allow 8080
      ufw:
        rule: allow
        port: "8080"
        proto: tcp
    - name: Allow 1834
      ufw:
        rule: allow
        port: "1834"
        proto: tcp
#    - name: Change sshd_config PORT
#      lineinfile: dest=/etc/ssh/sshd_config
#                  regexp='#Port 22'
#                  insertbefore=BOF
#                  line='Port 1834'
    - name: Allow pubkey SSH
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp='#PubkeyAuthentication yes'
                  insertbefore=BOF
                  line='PubkeyAuthentication yes'
    - name: RSA yes
      lineinfile: dest=/etc/ssh/sshd_config
                   regexp=''
                   insertafter=EOF
                   line='RSAAuthentication yes'
    - name: AuthorizedKeysFile
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp=''
                  insertafter=EOF
                  line='AuthorizedKeysFile ./ssh/authorized_keys'
#    - name: Add user Webdeveloper
#      vars: gen_passwd: "{{ lookup('S52we9V6qTp7', '/dev/null length=15 chars=ascii_letters' }}"
#      tasks:
#       - set_fact:
#          passwd: "{{gen_passwd}}"
#      user: 
#       name: Webdeveloper5
#       groups: sudo 
#       shell: /bin/bash 
#       password: "{{passwd | password_hash('sha512')}}"
#    - name: Add authorized key Webdeveloper  
#      authorized_key:
#       user: Webdeveloper
#       state: present
#       key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCovvBkeLIDsvbCyQsMWtPWVgGVKcwAqRONiBJ9JyrVCQbruyMPutatjSlhNpYXKLlP4BXHrGrmAVqeI155li1fkNP5Il7viHRE0HvA3M2extNGDDCiX5f5OlIeT9p/D9OHvWWozLjN2NAGEW24feuzKPZb6Kyv2W3yHbiIU3wt8v50VAIA2+PAfElHp1jplGHQLmYuT6Cc26Pn3WYXZ8t8oU77T6Ki5qDG5V5DVZI3Ym5gqqXXtJYzET9piJvO6qiIcgljtOGlUH9H9QNLEbuF+RKIhL3pFAnF8S79Km2A3j9KFZw6prDR6/VeMffMrNSZLeYztzDGEzm35uz5q6j+qrKsuA4SfpbSOcBwaariOoKpb6JfogoJRgCqxR5O1AKR/Oqhdk6JOlKJk+tIXFmOczH7da/W93f8KGGve4iHRvz/e3vYA7exXIVkD8mc/VmIoT1kqh/uNGia/adnyCgvMpL8JXLJgY2DThpjHslUr0RTEpQJTLTka3D43YV37kM="
    - name: apt signing key for Docker
      apt_key: 
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add apt repository 
      apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
       state: present
    - name: Docker install
      apt: 
        name: "{{ packages }}"	
        state: present
        update_cache: yes
      vars:
        packages:
         - docker-ce
         - docker-ce-cli
         - containerd.io
    - name: Download docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-Linux-x86_64
        dest: /usr/bin/docker-compose
        mode: 0755
    - name: Create skillcloud-nginx directory
      file:
        path=/root/skillcloud-nginx/
        state=directory
    - name: Copy
      ansible.builtin.copy:
        src: ./wsr-skillcloud/
        dest: /root/skillcloud-nginx/
    - name: reboot UFW
      service:
       name: "ufw"
       state: "restarted"
    - name: reboot SSH
      service:
       name: "ssh"
       state: "restarted"
#    - name: REBOOT
#      reboot:
#       msg: "Reboot initiated by Ansible"
#       connect_timeout: 5
#       reboot_timeout: 600
#       pre_reboot_delay: 0
#       post_reboot_delay: 30
#       test_command: whoami
